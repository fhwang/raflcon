<%= form_for @configuration, :url => {:action => action, :id => params[:id]} do |f| %>
  <% unless @configuration.errors.empty? %>
    <%= error_messages_for :configuration %>
  <% end %>

  <fieldset>
  <legend>Username</legend>
  <p class="description">This is used for the site's HTTP Basic authentication.</p>
  <%= f.text_field 'username' %>
  </fieldset>

  <fieldset>
  <legend>Password</legend>
  <p class="description">This is also used for the site's HTTP Basic authentication.</p>
  <%= f.password_field 'password' %>
  </fieldset>

  <fieldset>
  <legend>Confirm password</legend>
  <%= f.password_field 'password_confirmation' %>
  </fieldset>
  
  <fieldset>
  <legend>Start date</legend>
  <p class="description">What day does your conference start?</p>
  <%= f.date_select 'start_date' %>
  </fieldset>
  
  <fieldset>
  <legend>End date</legend>
  <p class="description">What day does your conference end?</p>
  <%= f.date_select 'end_date' %>
  </fieldset>
  
  <fieldset>
  <legend>Maximum giveaway attempt size</legend>
  <p class="description">What's the maximum number of people you're going to give prizes to in one batch? This is usually constrained somewhat by your UI; 10 is a good size to start with.</p>
  <%= f.text_field 'max_giveaway_attempt_size' %>
  </fieldset>
  
  <fieldset>
  <legend>Time zone</legend>
  <p class="description">What time zone is your conference in? raflcon needs this to line up your giveaway times with the database and with your browser.</p>
  <%= text_field_tag 'configuration[time_zone]', (@configuration.time_zone.friendly_identifier if @configuration.time_zone) %>
  </fieldset>
  
  <div id="time_zone_palette" style="display:none" class="autocomplete_palette"></div>
  
  <%= submit_tag %>
<% end %>

<script type="text/javascript">
$('#configuration_time_zone').autocomplete({
  source: function(request, response) {
    $.ajax({
      url: '/admin/time_zones',
      dataType: 'json',
      data: {q: request.term},
      success: function(data) {
        response($.map(data, function(timeZone) {
          return {
            label: timeZone.friendly_identifier, 
            value: timeZone.friendly_identifier
          }
        }));
      }
    })
  }
})
</script>
